name: Push

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  Install:
    uses: ./.github/workflows/install.yml

  Lint:
    runs-on: ubuntu-latest
    needs:
      - Install
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/cache@v3
        id: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - run: npm run lint

  Preview:
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - Lint
    environment:
      name: Development
      url: ${{ steps.deployment.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: iiro
          directory: public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  Release:
    # Run only in `main`, and skip release commits themselves to prevent infinite release loop
    if: ${{ github.ref_name == 'main' && !startsWith(github.event.head_commit.message, 'chore(release)') }}
    needs:
      - Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/cache@v3
        id: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          GIT_AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
          GIT_AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
          GIT_GIT_COMMITTER_NAME_NAME: ${{ github.event.head_commit.committer.name }}
          GIT_GIT_COMMITTER_NAME_EMAIL: ${{ github.event.head_commit.committer.email }}
