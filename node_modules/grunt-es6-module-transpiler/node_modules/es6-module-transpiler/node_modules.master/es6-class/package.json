{
  "name": "es6-class",
  "version": "0.9.2",
  "description": "ES6 classes compiled to ES5.",
  "main": "lib/index.js",
  "bin": {
    "es6-class": "bin/es6-class"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:esnext/es6-class.git"
  },
  "dependencies": {
    "ast-util": "^0.5.2",
    "recast": "^0.9.5",
    "through": "~2.3.6"
  },
  "devDependencies": {
    "example-runner": "^0.2.0",
    "es6-rest-params": "^0.3.0",
    "es6-default-params": "^0.4.0"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "author": {
    "name": "Square, Inc."
  },
  "license": "Apache 2",
  "readme": "# es6-class\n\nCompiles JavaScript written using ES6 classes to use ES5-compatible function\nsyntax. For example, this:\n\n```js\nclass Person {\n  constructor(firstName, lastName) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  get name() {\n    return this.firstName + ' ' + this.lastName;\n  }\n\n  toString() {\n    return this.name;\n  }\n}\n```\n\ncompiles to the equivalent with `Person` as a function. See the [esnext demo\npage](https://esnext.github.io/esnext) for more on the behavior and generated\nJavaScript.\n\nFor more information about the proposed syntax, see the [wiki page on\nclasses](http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes).\n\n## Install\n\n```\n$ npm install es6-class\n```\n\n## Usage\n\n```js\n$ node\n> var compile = require('es6-class').compile;\n```\n\nWithout arguments:\n\n```js\n> compile('class Foo {}');\n'var Foo = (function() {\\n  function Foo() {}\\n  return Foo;\\n})();'\n```\n\n## Browserify\n\nBrowserify support is built in.\n\n```\n$ npm install es6-class  # install local dependency\n$ browserify -t es6-class $file\n```\n\n## Contributing\n\n[![Build Status](https://travis-ci.org/esnext/es6-class.png?branch=master)](https://travis-ci.org/esnext/es6-class)\n\n### Setup\n\nFirst, install the development dependencies:\n\n```\n$ npm install\n```\n\nThen, try running the tests:\n\n```\n$ npm test\n```\n\nTo run specific example files:\n\n```\n$ node test/runner test/examples/my-example.js test/examples/other-example.js\n```\n\n### Pull Requests\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\nAny contributors to the master es6-class repository must sign the [Individual\nContributor License Agreement (CLA)][cla].  It's a short form that covers our\nbases and makes sure you're eligible to contribute.\n\n[cla]: https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n\nWhen you have a change you'd like to see in the master repository, [send a pull\nrequest](https://github.com/esnext/es6-class/pulls). Before we merge your\nrequest, we'll make sure you're in the list of people who have signed a CLA.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/esnext/es6-class/issues"
  },
  "homepage": "https://github.com/esnext/es6-class",
  "_id": "es6-class@0.9.2",
  "_shasum": "14d7435de44b9a7c64fc2959a0804c3c53964aa3",
  "_from": "es6-class@^0.9.2"
}
